# books/forms.py

from django import forms
from .models import Book, Tag

class BookForm(forms.ModelForm):
    gcl_secret_code = forms.CharField(
        label="GCL Secret Code",
        max_length=100,
        required=True,
        widget=forms.TextInput(attrs={'placeholder': 'Password can be found on page 14 of the GCL Zine.'})
    )

    tags = forms.CharField(
        required=False,
        widget=forms.TextInput(attrs={'class': 'tag-select', 'id': 'id_tags'}),
        help_text="Type to add new tags or select existing ones"
    )
    
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        # Add queryset for template access
        self.fields['tags'].queryset = Tag.objects.all()
        if self.instance and self.instance.pk:
            # Convert existing tags to comma-separated string
            existing_tags = self.instance.tags.all()
            self.fields['tags'].initial = ', '.join([tag.name for tag in existing_tags])

    class Meta:
        model = Book
        exclude = ['call_number', 'entry_number']  # Exclude autogenerated fields

    def clean_tags(self):
        tags = self.cleaned_data.get('tags', '')
        if tags:
            tag_list = [tag.strip() for tag in tags.split(',') if tag.strip()]
            if len(tag_list) > 10:
                raise forms.ValidationError("You can select up to 10 tags.")
        return tags

    def save(self, commit=True):
        book = super().save(commit=False)
        if commit:
            book.save()
            self.save_m2m()
        return book
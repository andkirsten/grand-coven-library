# books/forms.py

from django import forms
from .models import Book, Tag

class BookForm(forms.ModelForm):
    gcl_secret_code = forms.CharField(
        label="GCL Secret Code",
        max_length=100,
        required=True,
        widget=forms.TextInput(attrs={'placeholder': 'Password can be found on page 14 of the GCL Zine.'})
    )

    tags = forms.ModelMultipleChoiceField(
        queryset=Tag.objects.all(),
        required=False,
        widget=forms.SelectMultiple(attrs={'class': 'tag-select'})
    )

    class Meta:
        model = Book
        exclude = ['call_number', 'entry_number']  # Exclude autogenerated fields

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.fields['tags'].queryset = Tag.objects.all()
        if self.instance and self.instance.pk:
            self.fields['tags'].initial = self.instance.tags.all()

    def clean_tags(self):
        tags = self.cleaned_data['tags']
        if len(tags) > 10:
            raise forms.ValidationError("You can select up to 10 tags.")
        return tags

    def save(self, commit=True):
        book = super().save(commit=False)
        if commit:
            book.save()
            self.save_m2m()
        return book